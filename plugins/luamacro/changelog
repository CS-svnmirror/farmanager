t-rex 01.02.2013 21:20:11 +0200 - build 78

1. При загрузке всегда создаём папочку %FARPROFILE%\Macros\scripts чтоб тупой юзер как я мог понять куда ложить свои макросы.

shmuel 30.01.2013 13:18:49 +0200 - build 77

1. LuaFAR: добавлена функция 'win.EnumRegValue'.

shmuel 29.01.2013 20:19:19 +0200 - build 76

1. LuaFAR: добавлена функция 'win.EnumRegKey'.

shmuel 29.01.2013 10:46:39 +0200 - build 75

1. При отмене меню выбора макроса ключ передавался Фару для дальнейшей обработки.

shmuel 27.01.2013 16:01:35 +0200 - build 74

1. LuaFAR: если в far.Menu передавался невалидный BreakKey, то все последующие
   BreakKey игнорировались. Теперь игнорируются только невалидные BreakKey.

shmuel 26.01.2013 15:55:37 +0200 - build 73

1. Автостартующий макрос, назначенный на CtrlAltF8, запускался 4 раза
   при старте Фара (т.е. для всех сочетаний левых/правых модификаторов).

shmuel 23.01.2013 21:26:52 +0200 - build 72

1. LuaFAR: функция 'dofile' сделана юникодной и понимающей UTF-8 BOM.

shmuel 18.01.2013 21:07:42 +0200 - build 71

1. Рефакторинг.

shmuel 15.01.2013 21:23:50 +0200 - build 70

1. Рефакторинг.

shmuel 14.01.2013 18:20:29 +0200 - build 69

1. Рефакторинг.

shmuel 13.01.2013 11:40:40 +0200 - build 68

1. Изменения, связанные с макросами.

1.1. Интерпретация нажатия ключа, появление левосторонних модификаторов.
     При поступлении ключа, он рассматривается с различением лево- и правосторонних модификаторов.
     То-есть, не может поступить "CtrlX", а может либо "LCtrlX", либо "RCtrlX".

1.2. "Точные" и "обобщённые" модификаторы в спецификациях ключей.
     * Точные модификаторы - это LCtrl, LAlt, RCtrl и RAlt. Обобщённые модификаторы - это Ctrl и Alt.
     * Каждый из обобщённых модификаторов обозначает "любой", т.е. левый или правый модификатор.
       Таким образом, спецификация "CtrlAltX" эквивалентна спецификации "LCtrlLAltX LCtrlRAltX RCtrlLAltX RCtrlRAltX".
     * В одной и той же спецификации ключа могут указываться как точные модификаторы, так и обобщённые,
       например, "CtrlRAltX".

1.3. Ключи, заданные регулярным выражением.
     * При поступлении ключа, производится регистронезависимое сопоставление его имени (см. п.1) регулярному выражению,
       по правилам регулярных выражений Фара.
     * Регулярное выражение "/CtrlX/" никогда не сработает, поскольку на сопоставление может поступить
       либо "LCtrlX", либо "RCtrlX".
     * Примеры регулярных выражений, независимых от типа модификатора: "/.CtrlX/" или "/[LR]CtrlX/".
       У кого есть макросы со спецификациями ключей типа "/R?CtrlX/" - нужно поправить, как указано выше.

1.4. Спецификации ключей не имеют приоритетов друг перед другом.
     Если есть макросы 1 (key="RCtrlX"), 2 (key="CtrlX") и 3 (key="/.CtrlX/"), то при нажатии RCtrlX все они
     будут рассматриваться на одинаковых основаниях, а выбор будет производиться по совокупности заданных полей:
     flags (включая возможный вызов callback для макросов MCTL_ADDMACRO), condition и priority.

1.5. При записи макросов с клавиатуры, всегда используются обобщённые модификаторы ключей, то-есть нельзя
     с клавиатуры назначить макрос на LCtrlX или RCtrlX, а только на CtrlX.

1.6. Макросы, назначенные на область "Common", имеют приоритет по умолчанию = 40.

shmuel 11.01.2013 17:50:52 +0200 - build 67

1. Из форума: если при старте ФАРа на одной из панелей открывается сетевая папка, _может_ быть выдано такое сообщение:
   attempt to index upvalue 'Areas' (a nil value).

shmuel 07.01.2013 19:41:07 +0200 - build 66

1. Рефакторинг.

shmuel 07.01.2013 12:08:17 +0200 - build 65

1. LuaFAR: поддержка UTF-8 BOM в Lua-файлах.

shmuel 06.01.2013 15:18:45 +0200 - build 64

1. Из форума: C макросом Panel.Esc.lua в Macros\scripts перестала работать отмена копирования файлов по Esc.

shmuel 05.01.2013 00:02:17 +0200 - build 63

1. LuaFAR: M#2242: regex.match()

shmuel 04.01.2013 13:27:23 +0200 - build 62

1. Снято ограничение доступа к глобальным переменным на этапе загрузки макросов.

shmuel 03.01.2013 00:39:45 +0200 - build 61

1. Уточнение 60.1

shmuel 02.01.2013 22:46:02 +0200 - build 60

1. Файл luamacro.lua разделён на два файла (luamacro.lua и utils.lua).

2. В файлах макросов допустима директива NoMacro {...} для быстрого запрещения
   загрузки макроса (то-есть нужно дописать "No" перед директивой Macro). Хотя
   предпочтительным способом запрещения загрузки является закомментирование
   секции Macro {...}.

shmuel 02.01.2013 00:48:54 +0200 - build 59

1. Рефакторинг.

shmuel 01.01.2013 13:48:46 +0200 - build 58

1. ExitFARW больше не экспортируется.

shmuel 31.12.2012 00:00:49 +0200 - build 57

1. Неправильно работали ключи-регекспы при наличии группировки в ().

shmuel 30.12.2012 20:03:25 +0200 - build 56

1. В хелпе не отображались макросы, введенные с клавиатуры.

shmuel 29.12.2012 17:37:45 +0200 - build 55

1. 'area' в описании макроса может включать несколько областей, разделённых только пробелами.

shmuel 29.12.2012 15:09:01 +0200 - build 54

1. 'area' в описании макроса может включать несколько областей, разделённых пробелами/запятыми/точками с запятой.

2. 'key' в описании макроса может включать несколько ключей, разделённых пробелами.

3. 'key' в описании макроса может быть обозначен как фаровское регулярное выражение, обрамлённое слешами (/).
   В этом случае /Ctrl/ не сработает при нажатии RCtrl, надо явно обозначать /R?Ctrl/ и т.п.

4. Допустимо более одного макроса на сочетание (key,area). В этом случае выполняется только макрос с наибольшим
   приоритетом (как описано в 4a,4b,4c). Если есть более одного макроса с одинаковым приоритетом - выводится меню.
   Для автостартующих макросов - выполняются все, независимо от приоритета.

4a. Опциональное поле 'priority' в описании макроса: число от 0 до 100. Значение по умолчанию = 50.

4b. Опциональное поле 'condition' в описании макроса: функция. Eсли возвращает false/nil/ничего, то макрос
    не исполняется. Если возвращает число, то это число используется вместо 'priority'. При других значениях
    возврата (например, true) используется 'priority'.

4c. Макросы, добавляемые посредством MCTL_ADDMACRO, имеют приоритет = 50.

5. Макросы, записанные с клавиатуры, обрабатываются особо. Их может быть не более одного на сочетание (key,area).
   Их приоритет выше приоритета любых других макросов.

6. Формат макросов, записываемых с клавиатуры, изменился. Если у кого-то есть такие макросы, сохранённые в папке
   Macros/internal, перенесите эти файлы в папку Macros/scripts.

shmuel 15.12.2012 00:00:28 +0200 - build 53

1. Увеличена длина строки "Последовательность", используемой в диалогах
   удаления или модификации макросов.

shmuel 14.12.2012 20:26:02 +0200 - build 52

1. После перезагрузки плагина LuaMacro вызовы макросов приводили к ошибкам.
   Теперь после перезагрузки плагина макросы не загружены, но их можно загрузить командой lm:load.

2. Плагин LuaMacro: новая команда lm:unload - выгружает все макросы.

shmuel 12.12.2012 19:20:43 +0200 - build 51

1. Опечатка.

shmuel 12.12.2012 13:37:03 +0200 - build 50

1. При сохранении макроса "action=function()" записывается в текущей строке записи,
   для удобства просмотра аутлайнером колорера.

shmuel 12.12.2012 00:08:24 +0200 - build 49

1. Уточнение build 46:
   "<" = "Less"
   ">" = "More"

shmuel 11.12.2012 15:34:44 +0200 - build 48

1. Уточнение предыдущих двух коммитов.

shmuel 11.12.2012 15:27:15 +0200 - build 47

1. Добавление к предыдущему коммиту:
   "." = "Dot"

shmuel 11.12.2012 15:04:09 +0200 - build 46

1. Кодирование 'key' в имени файла-макроса при сохранении производится путём
   замены некоторых символов, с помощью следующего соответствия:
   "<" = "Lt"
   ">" = "Gt"
   "|" = "Pipe"
   "/" = "Slash"
   ":" = "Colon"
   "?" = "Question"
   "*" = "Asterisk"
   '"' = "Quote"

shmuel 11.12.2012 01:11:46 +0200 - build 45

1. Кодирование 'key' в имени файла-макроса при сохранении производится только в случае,
   если 'key' содержит символы, которые являются невалидными для имени файла.

shmuel 09.12.2012 22:32:32 +0200 - build 44

1. Рефакторинг.

shmuel 09.12.2012 20:26:09 +0200 - build 43

1. У функций, определённых вне таблицы-аргумента загрузочной функции Macro(),
   не было доступа к глобальным переменным.

shmuel 09.12.2012 16:03:52 +0200 - build 42

1. Макросы переехали из macros.db в папку %FARPROFILE%\Macros и содержатся в Lua-файлах.

shmuel 27.11.2012 16:12:25 +0200 - build 41

1. Рефакторинг.

shmuel 25.11.2012 19:39:47 +0200 - build 40

1. Экспериментально: использование секции "farconfig/macros/variables" базы данных для Lua-модулей (библиотек).
   Каждая переменная - модуль. Имена модулей регистрозависимы.
   Например: <variable name="shmuel.utils" type="text"> ...... </variable>
   Пример использования в макросе: utils=require "shmuel.utils"
   ВНИМАНИЕ: "variables" больше не грузятся при старте Фара. Используйте для этого "constants".

shmuel 25.11.2012 11:05:58 +0200 - build 39

1. Добавлено свойство Mouse.LastCtrlState, которое (в отличие от Mouse.CtrlState)
   обновляется как по мышиным, так и по клавиатурным событиям.

shmuel 23.11.2012 13:33:16 +0200 - build 38

1. LuaFAR: чистим структуру PluginPanelItem перед заполнением.

shmuel 23.11.2012 12:14:12 +0200 - build 37

1. M#2206: Соответствие структуры таблицы FindData со структурой PluginPanelItem.

shmuel 10.11.2012 00:05:31 +0200 - build 36

1. LuaFAR: рефакторинг.

shmuel 08.11.2012 10:43:21 +0200 - build 35

1. Перенос вызова _control87 из Фара в плагин LuaMacro.

shmuel 07.11.2012 15:30:22 +0200 - build 34

1. LuaFAR: фикс багов с передачей указателей на данные внутри блока наружу.

shmuel 02.11.2012 18:07:06 +0200 - build 33

1. Упорядочена структура FarMacroCall.

shmuel 01.11.2012 22:47:59 +0200 - build 32

1. LuaFAR: Far API 3.0.2918.

shmuel 31.10.2012 20:32:30 +0200 - build 31

1. Plugin.Call: для симметрии, величины типа FMVT_BINARY, возвращаемые плагином,
   передаются в макрос в таблице, как 1-й элемент таблицы.

shmuel 30.10.2012 23:06:44 +0200 - build 30

1. LuaFAR-плагины при вызове OPEN_FROMMACRO получают таблицу-массив аргументов
   без явного указания их типов.

shmuel 30.10.2012 20:42:17 +0200 - build 29

1. LuaFAR: фикс багов с передачей указателей на данные внутри блока наружу.

shmuel 30.10.2012 18:16:01 +0200 - build 28

1. Уточнение build 26.

2. Far API 3.0.2912.

zg 30.10.2012 00:32:37 +0200 - build 27

1. LuaFAR: Far API 3.0.2912.

shmuel 29.10.2012 22:58:41 +0200 - build 26

1. Поддержка передачи "бинарных величин" (FMVT_BINARY) из Lua в C, то-есть:
     а) из макроса в (любой) плагин
     б) из LuaFAR-плагина в макрос
   Каждая такая величина должна передаваться в таблице, как 1-й элемент таблицы.

shmuel 28.10.2012 22:23:05 +0200 - build 25

1. Рефакторинг.

zg 28.10.2012 02:04:17 +0200 - build 24

1. LuaFAR: ACTL_GETWINDOWINFO возвращает userdata для Id также и для WTYPE_VMENU.

shmuel 27.10.2012 20:55:55 +0200 - build 23

1. LuaFAR: warnings.

shmuel 25.10.2012 00:12:09 +0200 - build 22

1. LuaFAR: рефакторинг.

shmuel 22.10.2012 11:20:01 +0200 - build 21

1. LuaFAR: поддержка последних изменений в Plugin.Call для LuaFAR-плагинов.

w17 21.10.2012 20:36:46 +0400 - build 20

1. luafar3.vcxproj postbuild - copy lua5.1.dll added

shmuel 21.10.2012 10:33:29 +0200 - build 19

1. LuaFAR: рефакторинг.

shmuel 20.10.2012 19:49:43 +0200 - build 18

1. LuaFAR: к четырём типам данных, которые может возвращать Plugin.Call,
   добавился ещё один: "бинарная величина" - это string, который может содержать
   любые данные и который не подвергается преобразованию UTF-16LE -> UTF-8.

shmuel 20.10.2012 08:36:00 +0200 - build 17

1. Plugin.Call может возвращать одну или более величин, каждая из которых
   может быть: целым 64-битным числом, числом с плавающей точкой, строкой
   (UTF-16LE) или булевой величиной.

shmuel 19.10.2012 15:48:43 +0200 - build 16

1. LuaFAR: рефакторинг.

shmuel 19.10.2012 11:41:44 +0200 - build 15

1. LuaFAR: удалены препроцессорные директивы FAR_LUA.

svs 15.10.2012 12:40:38 +0400 - build 

1. Форматирование кода
   AStyle --style=ansi --indent=tab=4 --brackets=break --indent-classes --indent-switches --indent-namespaces --indent-preprocessor --break-blocks --delete-empty-lines --unpad-paren --keep-one-line-statements --keep-one-line-blocks "!\!.!"


svs 15.10.2012 11:46:00 +0400 - build 14

1. ФАРоконстанты в api.lua и luamacro.lua

shmuel 14.10.2012 21:22:40 +0200 - build 13

1. Добавлена функция `unicode.utf8.cfind` (она будет автоматически вызываться
   при использовании метода `cfind`).

zg 14.10.2012 19:42:19 +0200 - build 12

1. warnings.

shmuel 14.10.2012 15:33:27 +0200 - build 11

1. Немного упрощён протокол передачи данных Far->LuaFAR->LuaMacro.

shmuel 12.10.2012 20:55:00 +0200 - build 10

1. LuaFAR: удалена неиспользуемая функция far.DefDlgProc.

shmuel 11.10.2012 17:35:57 +0200 - build 9

1. Восстановлена работа функции MacroControl(MCTL_GETLASTERROR).

shmuel 10.10.2012 20:36:46 +0200 - build 8

1. LuaFAR: исправлена ошибка, приводящая к падению.

shmuel 10.10.2012 06:48:48 +0200 - build 7

1. Более корректная обработка командной строки.

2. LuaFAR: закомментирован кусок с ошибкой, приводящей к падению. На работу
   плагина не влияет. Исправление займёт некоторое время.

shmuel 09.10.2012 11:44:09 +0200 - build 6

1. Добавлена поддержка командной строки (префикс LM).
   Операции те же, что в плагине FarCmds: load, save, post, check.
   Имя файла задаётся как @filename, а не <filename.
   Теперь можно производить операции с командной строки, независимо от наличия плагина FarCmds.

shmuel 09.10.2012 06:37:50 +0200 - build 5

1. Refactor.

shmuel 09.10.2012 00:07:33 +0200 - build 4

1. Добавлена возможность интроспекции "свойств" глобальных таблиц API макроязыка.
   Например, свойства таблицы Editor можно просмотреть так:
     for k,v in pairs(Editor.properties) do .... end

t-rex 06.10.2012 18:48:30 +0200 - build 3

1. Обновил для Far build 2871.

shmuel 05.10.2012 20:00:00 +0200 - build 2

1. Macro API: все глобальные функции, относящиеся к этому API, продублированы также в таблице mf.
   Например, eval и mf.eval - это одна и та же функция.

drkns 29.09.2012 22:52:06 +0200 - build 1

1. Импорт & адаптация под систему сборки.
