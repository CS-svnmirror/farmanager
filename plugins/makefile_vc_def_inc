#The following variables can be set by the user:
#
#NAME - the name of the plugin (project name|dll name).
#
#EXT - extension of the plugin executable (dll by default).
#
#ADDOUTDIR - you can set it to /dir if the target folder for the plugin
#            is a folder inside the default target folder.
#            This is used in multiarc for building *.fmt.
#
#USERCPP - user defined switches for the compiler (added after the default
#          ones).
#
#CPP_UNALIGN - use 1byte alignment insead of 8bytes in 32bit compiling
#
#ADDOBJDIR - you can set it to /dir if the temporary folder for the plugin
#            compiled files is a folder inside the default temporary folder.
#            This is used in ftp for building *.fll.
#
#DEF_NAME - name of DEF-file (maybe with path, but always without extension).
#           If unspecifiedn used $(NAME).
#           This is used in ftp for building *.fll.
#
#RC_NAME  - name of RC-file (maybe with path, but always without extension).
#           If unspecifiedn used $(NAME).
#           This is used in ftp for building *.fll.
#
#LINK_OBJS - a list of target *.obj files
#
#LINK_DEP - additional dependents for link rule (e.g. prebuild library)
#
#DEBUG - set if a debug build is needed
#
#WIDE - set for a unicode build
#
#ULINK - set if you want to use ulink for linking
#
#NEEDENTRY - set if you want to disable the /noentry link flag
#
#NEEDDEFLIB - set if you want to disable the /nodefaultlib link flag
#
#EXCLUDECRT - set if you do not want to link with common/crt lib.
#
#AMD64 - set for x64 build
#  or
#CPU=AMD64 - for x64 build
#
#IA64 - set for IA64 build
#  or
#CPU=IA64 - for IA64 build
#
#VC8 - set to build with VC8, VC9 intended by default
#

!if defined(AMD64) || "$(CPU)" == "AMD64"
!undef AMD64
!undef CPU
AMD64=1
CPU=AMD64
!elseif defined(IA64) || "$(CPU)" == "IA64"
!undef IA64
!undef CPU
IA64=1
CPU=IA64
!endif

!ifndef RC_NAME
RC_NAME=$(NAME)
!endif

!ifndef DEF_NAME
DEF_NAME=$(NAME)
!endif

!ifndef DEBUG
DIRNAME=final
!else
DIRNAME=debug
!endif                   

!ifdef WIDE
DIRSUFF = W
!endif

!ifdef AMD64
DIRBIT = 64
!elseif defined(IA64)
DIRBIT = IA64
!else
DIRBIT = 32
!endif
WORKDIR = $(DIRNAME).$(DIRBIT)$(DIRSUFF).vc
!ifdef INSTALL
OUTDIR=$(INSTALL)
!else
OUTDIR=$(WORKDIR)
!endif

OBJDIR = $(WORKDIR)\obj$(ADDOBJDIR)
COMMON = ..\common
!ifndef WIDE
COMINC = $(COMMON)\ascii
!else
COMINC = $(COMMON)\unicode
CPP_WIDE = /DUNICODE /D_UNICODE
RC_WIDE = /dUNICODE
!endif
!ifndef EXT
EXT = dll
!endif
DLLNAME = $(NAME).$(EXT)
DLLFULLNAME = $(OUTDIR)$(ADDOUTDIR)\$(DLLNAME)
!ifndef WIDE
DEF = $(DEF_NAME).vc.def
!else
DEF = $(DEF_NAME)W.vc.def
!endif
MAP = $(OUTDIR)$(ADDOUTDIR)\$(NAME).map
RES = $(OBJDIR)\$(NAME).res

!ifdef VC8
COMPAT64=/Wp64
NOWIN98=/OPT:NOWIN98
!endif

!ifndef DEBUG
CPP_OPT=/DNDEBUG /O1i
!else
PDBNAME="$(OUTDIR)$(ADDOUTDIR)\$(NAME).pdb"
CPP_OPT=/DDEBUG /Od /Fd$(PDBNAME)
!endif

!ifdef AMD64
COMMONLIB = $(COMMON)\libCRT64.lib
CPP_PROJ_NO=/nologo /c /W3 /Gy /GF /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD /I"$(COMMON)" /I"$(COMINC)" $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_WIN32_WINNT=0x0502 $(USERCPP)
ULOUT=-Tpd+
!elseif defined(IA64)
COMMONLIB = $(COMMON)\libCRTIA64.lib
CPP_PROJ_NO=/nologo /c /W3 /Gy /GF /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD /I"$(COMMON)" /I"$(COMINC)" $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_WIN32_WINNT=0x0502 $(USERCPP)
ULOUT=-Tpd+
!else
COMMONLIB = $(COMMON)\libCRT.lib
!ifdef CPP_UNALIGN
CPP_ALIGN=/Zp1
!endif
CPP_PROJ_NO=/nologo /c /W3 /Gy /GF $(CPP_ALIGN) /J /Gr /GS- /GR- /EHs-c- /LD /I"$(COMMON)" /I"$(COMINC)" $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_WIN32_WINNT=0x0502 $(USERCPP)
ULOUT=-Tpd -Re
!endif
CPP_PROJ=$(CPP_PROJ_NO) /Fo"$(OBJDIR)\\"

!ifdef EXCLUDECRT
!undef COMMONLIB
!endif
LIBS = $(COMMONLIB) chkstk.obj kernel32.lib user32.lib gdi32.lib advapi32.lib shell32.lib ole32.lib uuid.lib mpr.lib version.lib oleaut32.lib wbemuuid.lib

!ifdef _BIN_PATH_
!ifndef _CL_PATH_
_CL_PATH_=$(_BIN_PATH_)
!endif
!ifndef _RC_PATH_
_RC_PATH_=$(_BIN_PATH_)
!endif
!ifndef _LINK_PATH_
_LINK_PATH_=$(_BIN_PATH_)
!endif
!endif


!ifndef ULINK
LNK=$(_LINK_PATH_)link.exe
LINK_DEBUG=/pdb:$(PDBNAME)
CPP_DEBUG=/Zi
!ifndef NEEDENTRY
NOENTRY = /noentry
!endif
!ifndef NEEDDEFLIB
NODEFLIB = /nodefaultlib
!endif
LINK_FLAGS=/nologo /dll /release /merge:.rdata=.text $(NOWIN98) $(NOENTRY) $(NODEFLIB) $(ENV_LIB_OPT) /def:"$(DEF)" /map:"$(MAP)" /out:"$(DLLFULLNAME)"
!else
LINK_DEBUG=-v
CPP_DEBUG=/Z7
LNK=$(_ULINK_PATH_)ulink.exe +-
!ifndef NEEDENTRY
NOENTRY = -e-
!endif
!ifndef NEEDDEFLIB
NODEFLIB = -n
!endif
LINK_FLAGS=-q $(ULOUT) -Gz -m- -Gh -Gh- $(NOENTRY) $(NODEFLIB) /ZD:"$(DEF)" /ZM:"$(MAP)" /ZO:"$(DLLFULLNAME)" $(ENV_LIB_OPT)
!endif

!ifndef DEBUG
!undef LINK_DEBUG
!undef CPP_DEBUG
!endif

CFLAGS_NO = $(MP) $(CPP_PROJ_NO) $(CPP_DEBUG) $(CPP_OPT)
CFLAGS = $(MP) $(CPP_PROJ) $(CPP_DEBUG) $(CPP_OPT)

!ifndef CC
CC=$(_CL_PATH_)cl.exe
!endif

!ifndef LIBR
LIBR=$(_LINK_PATH_)lib.exe
!endif

!ifndef RC
RC=$(_RC_PATH)rc.exe
!endif

!if !defined(SRC_PATHS_DEFINED) && defined(__MAKE__)
.path.cpp=.
.path.c=.
.path.hpp=.
.path.h=.
.path.rc=.
.path.def=.
!endif

