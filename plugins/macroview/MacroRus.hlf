.Language=Russian,Russian (Русский)
.PluginContents=Модуль просмотра макрокоманд FAR

@Contents
$ #Модуль просмотра макрокоманд FAR#
    Этот модуль обеспечивает просмотр, редактирование, копирование и
перемещение макрокоманд в другие области, копирование и перемещение
макрокоманд в другие пользовательские настройки FAR, экспорт в файл, вставку
в редактор, создание, удаление и отключение используемых в FAR макрокоманд.

   ~Список макрокоманд~@MacroView@

   ~Области макрокоманд~@MacroAreas@

   ~Специальные макрокоманды~@MacroSpecial@

   ~Параметры макрокоманды~@MacroParams@

   ~Копирование и перемещение~@MacroCopy@

   ~Удаление и отключение макрокоманд~@MacroDel@

   ~Экспорт макрокоманды в файл~@MacroExport

   ~Экспорт всех макрокоманд в файл~@MacroExportAll

   ~Настройка модуля просмотра макрокоманд~@Config@

@MacroView
$ #Список макрокоманд#
    Макрокоманды, записанные в FAR, отображаются в виде списка в одном
из двух возможных форматов:
 #[-] Область действия: "Команда выполнения"#

 либо в формате:
 #[-] Область действия:# #"Команда выполнения" | Описание макрокоманды#

 Формат отображения зависит от ~настроек модуля просмотра~@Config@.


 Описание формата отображения:
 -----------------------------

 Знак #-# слева от макрокоманды означает, что макрокоманда временно отключена.

 #Область действия# - это область действия макрокоманды. В зависимости от
настроек, область действия может быть представлена короткими именами -
внутренними именами FAR, используемыми им в реестре или длинными именами,
назначенными данным модулем. Поддерживаемые текущей версией значения областей
можно посмотреть в списке ~областей макрокоманд~@MacroAreas@ или в выпадающем
списке поля #Область выполнения# окна ~параметров макрокоманды~@MacroParams@.

 #Команда выполнения# - комбинация клавиш для запуска макрокоманды на выполнение,
состоящая из текстового представления клавиши. Существует возможность вводить
эти комбинации автоматически, используя стандартную для FAR комбинацию начала
записи макроса #Ctrl-.# в окне параметров макрокоманды.

 #Описание макрокоманды# - назначенное пользователем описание макрокоманды,
вводимое им при редактировании или при вводе новой макрокоманды.


 Клавиатурные команды:
 ---------------------

 Для создания новой макрокоманды используется клавиша #Ins#.

 Вы можете отредактировать поведение макрокоманды, макропоследовательность,
команду выполнения, область действия и её флаги, выбрав макрокоманду из списка
и нажав #F4# или #Enter#. При этом будет выдано окно параметров макрокоманды,
в котором можно произвести необходимые изменения в макрокоманде.

 Для копирования макрокоманды в любую другую область любой пользовательской
конфигурации FAR следует использовать клавишу #F5#, для перемещения клавишу #F6#.

 Сохранить макрокоманду в файл формата REGEDIT вы можете, воспользовавшись
клавишей #F2#. Клавиша #Shift-F2# используется для сохранения всех макрокоманд
в файле.

 Для вставки макрокоманды в текущую позицию курсора в редакторе используйте
клавишу #F2# или используйте #Shift-F2#, чтобы вставить все макрокоманды.

 Быстрый переход на следующую или предыдущую область макрокоманд осуществляется
при помощи клавиш #Ctrl-Down# и #Ctrl-Up#.

 Ненужную больше макрокоманду вы можете удалить или временно отключить
при помощи клавиши #Del#. Используя эту же клавишу можно восстановить работу
временно отключённой макрокоманды.

@MacroAreas
$ #Области макрокоманд#

   ~Короткие имена областей~@MacroAreasShort@
   ~Длинные имена областей~@MacroAreasLong@

@MacroAreasShort
$ #Области макрокоманд. Короткие имена#

 #Dialog#     команда работает в диалоговых окнах.

 #Disks#      команда работает в меню выбора дисков.

 #Editor#     команда работает во встроенном текстовом редакторе.

 #Help#       команда работает в окне справки.

 #InfoPanel#  команда работает в информационной панели.

 #MainMenu#   команда работает в основном меню.

 #Menu#       команда работает в прочих меню.

 #QviewPanel# команда работает в панели быстрого просмотра.

 #Search#     команда работает в окне быстрого поиска файлов.

 #Shell#      команда работает в файловой панели.

 #TreePanel#  команда работает в панели дерева.

 #Viewer#     команда работает во встроенной программе просмотра.

 #Other#      команда работает везде, кроме областей, описанных выше.

 #Common#     общая команда, которая работает везде в FAR.

@MacroAreasLong
$ #Области макрокоманд. Длинные имена#

 #Диалоговые окна#         команда работает в диалоговых окнах.

 #Меню выбора дисков#      команда работает в меню выбора дисков.

 #Текстовый редактор#      команда работает во встроенном текстовом
                         редакторе.

 #Окно справки#            команда работает в окне справки.

 #Инфо панель#             команда работает в информационной панели.

 #Основное меню#           команда работает в основном меню.

 #Прочие меню#             команда работает в прочих меню.

 #Панель быстрого#         команда работает в панели быстрого
 #просмотра#               просмотра.

 #Быстрый поиск файлов#    команда работает в окне быстрого поиска
                         файлов.

 #Файловые панели#         команда работает в файловой панели.

 #Панель дерева#           команда работает в панели дерева.

 #Программа просмотра#     команда работает во встроенной программе
                         просмотра.

 #Другие области#          команда работает везде, кроме областей,
                         описанных выше.

 #Общие макросы#           общая команда, которая работает везде в
                         FAR.

@MacroSpecial
$ #Специальные макрокоманды#
    FAR поддерживает набор специальных макрокоманд, которые не могут вводиться
автоматически во время ввода макрокоманды, а записываются вручную в поле
#Последовательность# окна ~параметров макрокоманд~@MacroParams@:

 #$Date ["format"]#
    Текущее время используется для преобразования в строку по формату
"format". Если аргумент "format" не указан, то FAR будет использовать
форматную строку "%a %b %d %H:%M:%S %Z %Y". Этот формат подобен тому,
что выдаёт утилита date (Unix). $Date поддерживает следующую спецификацию
формата даты (подобен формату функции strftime):

        %%   символ %
        %a   Краткое имя дня недели (Sun или Вск)
        %A   Полное имя дня недели (Sunday или Воскресенье)
        %b   Краткое имя месяца (Jan или Янв)
        %B   Полное имя месяца (January или Январь)
        %c   Дата и время в формате WDay Mnt Day HH:MM:SS yyyy
             (Mon Jan 10 04:11:54 2000 или Пнд Янв 10 04:11:54 2000)
        %C   Столетие как десятичное число (00 - 99). 1992 => 19
        %d   Две цифры дня месяца (01 - 31)
        %D   Синоним для %x
        %e   Синоним для %d, но вместо ведущего нуля будет стоять
             пробел.
        %h   Синоним для %b
        %H   Две цифры часа (00 - 23)
        %I   Две цифры часа (01 - 12)
        %j   Три цифры дня в году (001 - 366)
        %k   Синоним для %H, но вместо ведущего нуля будет стоять
             пробел.
        %l   Синоним для %I, но вместо ведущего нуля будет стоять
             пробел.
        %L   Триггер, переключающий язык названий месяцев и дней
             недели - английский/локальный.
             FAR запрашивает у системы 2 набора наименований:
             1) английские наименования месяцев и дней недели
             2) наименования, соответствующие настройкам текущего
                пользователя (LOCALE_USER_DEFAULT)
             По умолчанию выставляются английские наименования.
        %m   Месяц, как десятичное число (1 - 12)
        %m0  Подобно %m, но с ведущим нулём (01 - 12)
        %mh  Одна цифра месяца, как шестнадцатеричное число (1 - С)
        %M   Две цифры минут (00 - 59)
        %n   Подобно переводу строки `\\n'
             Внимание! В редакторе автоотступ не работает.
        %p   AM или PM
        %r   Подобно %I:%M:%S %p
        %R   Подобно %H:%M
        %S   Две цифры секунд (00 - 59)
        %t   Подобно символу табуляции `\\t'
        %T   Синоним %X
        %U   Две цифры номера недели, где Воскресенье (Sunday)
             является первым днём недели (00 - 53)
        %v   Дата в формате dd-mmm-yyyy (mmm - в верхнем регистре)
        %V   Неделя года в соответствии с ISO 8601:
             "Если неделя, содержащая 1 Января, имеет >= 4 дней в
             течение нового года, тогда это неделя 1; в противном
             случае это самая последняя нумерованная неделя прошлого
             года (52 или 53)"
        %w   День недели где 0 - Воскресенье (Sunday) (0 - 6)
        %W   Две цифры номера недели, где Понедельник (Monday)
             является первым днём недели (00 - 53)
        %x   Дата в формате подобно dd<sep>mm<sep>yyyy (разделитель
             <sep> зависит от локальных настроек; порядок дня, месяца
             и года зависит от локальных настроек)
        %X   Время в формате HH<sep>MM<sep>SS (разделитель <sep>
             зависит от локальных настроек)
        %y   Две цифры года без столетия (00 - 99)
        %Y   Год со столетием (19yy-20yy)
        %Z   Имя часового пояса или пусто, если часовой пояс не задан

    Произвольный текст в форматной строке должен быть только в OEM-кодировке.

    В макрокоманде '$Date' допускается применение следующих
escape-последовательностей:

        \"   Символ '"'
        \\   Символ '\'
        \n   Перевод строки '\n'
        \t   Табуляция '\t'
        \a   bell
        \b   '\b'
        \f   '\f'
        \v   '\v'
        \N   8-ричный символ из OEM кодировки
        \NN  --//--//--//--
        \NNN --//--//--//--
        \xNN 16-ричный символ из OEM кодировки


 #$Text "string"#
    Предназначена для вставки произвольного текста.
Вставляемый текст 'string' должен быть только в OEM-кодировке.
Допускается применение следующих escape-последовательностей:

        \"   Символ '"'
        \\   Символ '\\'
        \n   Переводу строки '\n'
        \t   Табуляции '\t'
        \a   bell
        \b   '\b'
        \f   '\f'
        \v   '\v'
        \N   8-ричный символ из OEM кодировки
        \NN  --//--//--//--
        \NNN --//--//--//--
        \xNN 16-ричные символы из OEM кодировки

    Макрокоманда '$Text' позволяет сократить расход памяти при хранении
длинной макропоследовательности, вставляющей некоторый текст, и сделать
её более наглядной.

     Фразу "$Text" можно не указывать, т.е. произвольный текст в двойных
кавычках макродвижок воспримет как $Text.

 #$IClip#
     Работа с буфером обмена. По умолчанию FAR, в операциях
запоминания/вставки данных, работает с Буфером Обмена Windows.
Макрокоманда '$IClip' позволяет в пределах одного макроса переключать
внутренние механизмы FAR для работы с/без использования Буфера Обмена
Windows. Работает как триггер.

 #$MMode 1#
     Сменить режим макроса. Изменяет режим отображения
("DisableOutput"). Работает как триггер.

 #$Exit#
     Прерывает выполнение макропоследовательности.

 #$XLat#
     Вызывает функцию транслитерации. Работает независимо от того,
какие клавиши назначены в TechInfo##10.

 #$KbdSwitch#
     Циклическое переключение раскладки клавиатуры.

 #$If (Expr) TruePart [$Else FalsePart] $End#
     Позволяет организовать в макросах процесс ветвления
макропоследовательности.

 #$While (Expr) Sequence $End#
     Позволяет организовать в макросах циклический процесс -
"Пока условие Expr истинно выполнять последовательность Sequence".

 #$Rep (Expr) Sequence $End#
     Позволяет организовать в макросах циклический процесс -
"Выполнить Expr раз последовательность Sequence".

 #%var=value;#
 #%%var=value;#
     Использование ~переменных~@MacroVariables@.

@MacroParams
$ #Параметры макрокоманды#
    Данное диалоговое окно показывает параметры, установленные на выбранную
макрокоманду. Здесь вы можете изменить назначенную на неё комбинацию клавиш,
клавишу запуска, на которую назначена макрокоманда, ~область~@MacroAreas@,
в которую она входит, её поведение и описание:

 #Команда выполнения#

    Комбинация клавиш для выполнения макрокоманды, которая может содержать
значения, состоящие из названий клавиш, например: #CtrlShiftF5#, #AltF1#,
#ShiftF8#.

 #Область выполнения#

    Область действия макрокоманды. Список поддерживаемых модулем областей
находится в ~области макрокоманд~@MacroAreas@, а также в выпадающем списке
этого поля. При создании макрокоманды это поле содержит наименование той
области, откуда модуль был запущен.

 #Последовательность#

    Введите в это поле новую комбинацию клавиш или отредактируйте текущую.
Все клавиши должны отделяться друг от друга пробелом. Существует возможность
ввода этих комбинаций автоматически, для этого нажмите Ctrl-. затем клавиши
комбинации. Чтобы остановить автоматический ввод повторно нажмите Ctrl-.,
после чего клавишу, которую вы хотите назначить на #Команду выполнения#.
Учтите, что ~специальные макрокоманды~@MacroSpecial@ не вводятся автоматически,
они должны записываться в это поле вручную.

 #Описание#

    В это поле вводится описание на вновь созданную или редактируемую
макрокоманду. Данное описание отображается в списке макрокоманд, если включён
соответствующий режим в ~настройках модуля~@Config@.

 #Выполнять при запуске FAR#

    Позволяет выполнять макрокоманду сразу после запуска FAR Manager.

 #Запретить вывод на экран#

    При выполнении макрокоманды вывод на экран будет запрещён.

 #Командная строка#

    [x] - выполнять, только если командная строка не пуста.
    [ ] - выполнять, только если командная строка пуста.
    [?] - игнорировать состояние командной строки.

 #Существует отмеченный блок#

    [x] - выполнять, только если выделен блок в редакторе,
          программе просмотра, командной строке или в строке
          ввода в диалоге.
    [ ] - выполнять, если нет отмеченного блока
    [?] - игнорировать состояние отметки блока



    Для активной и пассивной панелей возможны следующие условия
активации макрокоманды:

 #Плагиновая/файловая панель#

    [x] - выполнять, только если текущая панель плагиновая.
    [ ] - выполнять только для файловой панели.
    [?] - игнорировать тип панели.

 #Папка/файл под курсором#

    [x] - выполнять, только если на панели под курсором папка.
    [ ] - выполнять, только если на панели под курсором файл.
    [?] - выполнять для папок и файлов.

 #Папка/файл выделен#

    [x] - выполнять, только если на панели есть отмеченные
          файлы/папки.
    [ ] - выполнять, если нет отмеченных файлов/папок.
    [?] - игнорировать состояние отметки файлов/папок.



 #Посылать макрокоманду в плагины#

    При отключённой опции все нажимаемые клавиши, во время
воспроизведения макрокоманды, не будут передаваться плагинам.

 #Отключить макрокоманду#

    Если эта опция включена, то после сохранения макрокоманды она станет
неактивной.

@MacroDelEmpty
$ #Удаление пустой макрокоманды#
    Если при редактировании макрокоманды удалить текст комбинации
клавиш, то предполагается, что вы хотите макрокоманду удалить,
что и будет сделано, если вы подтвердите удаление. Также вы можете
временно отключить её, сохранив в том виде, какие изменения вы
внесли. Вы можете просто отменить удаление и сохранить макрокоманду
пустой.

@MacroDel
$ #Удаление и отключение макрокоманд#
    В данном модуле имеется возможность удалить ненужную более
макрокоманду. Для этого выберите удаляемую макрокоманду, нажмите
клавишу #Del# и выберите #Удалить#. Кроме того вы можете, не
удаляя макрокоманду, отключить её выполнение. Это достигается
также нажатием клавиши #Del#, после чего нужно выбрать #Отключить#.
Отключённая макрокоманда помечается в списке слева знаком #-#. Включить
макрокоманду можно, проделав ту же операцию, только в диалоге нужно
выбрать #Восстановить#.


@MacroCopy
$ #Копирование и перемещение макрокоманды#
    Клавишами #F5# или #F6# из основного списка макрокоманд можно вызвать диалог
копирования или перемещения выбранной макрокоманды в любую область любой
пользовательской конфигурации.

 #В конфигурацию#

    Этот список содержит имена всех пользовательских конфигураций FAR.
Выберите необходимую конфигурацию для копирования или перемещения в неё
выбранной макрокоманды. По-умолчанию в этом поле выбрана конфигурация,
в которой в данный момент работает FAR.

 #В область#

    Этот список позволяет выбрать область, куда будет скопирована или перемещена
выбранная макрокоманда.

 #Новая команда выполнения#

    Копируемой или перемещаемой макрокоманде будет назначена команда выполнения,
содержащаяся в этом поле. По-умолчанию в поле содержится значение, как у
макрокоманды, над которой производится операцию. Вы можете заменить команду
выполнения на любое необходимое значение, кроме пустого.


    Если при копировании или перемещении будет обнаружено, что в месте назначения
есть макрокоманда с таким же именем, как у копируемой или перемещаемой, то в этом
случае будет выдано предупреждение на подтверждении перезаписи.

@Config
$ #Настройка модуля просмотра макрокоманд#
    Данное диалоговое окно позволяет произвести настройку модуля
просмотра макрокоманд:

 #Показывать описания в списке макрокоманд#

    Установка данной опции включает отображение описаний в списке
макрокоманд.

 #Сохранять без диалога подтверждения#

    Включение данной опции отменяет диалоговый запрос на подтверждение
сохранения. При этом сохранение изменений происходит автоматически.

 #Использовать подсветку в списке макрокоманд#

    Данная опция включает или отключает отображение горячих клавиш в списке
макрокоманд.

 #Сортировка, зависящая от места запуска#

    Включает сортировку макрокоманд в зависимости от места запуска
модуля, т.е. при запуске модуля в редакторе первыми в списке будут
макрокоманды, принадлежащие области "Editor" и т.д. Также в заголовках
списка макрокоманд и FAR появятся буквы "ЗС", показывающие, что этот
режим включён.

 #Использовать длинные имена областей макрокоманд#

    Данная опция позволяет видеть область выполнения макрокоманды
в списке в "нормальном", понятном пользователю виде.

 #Циклическая прокрутка курсора в меню#

    Если пользователь включает эту опцию, движение курсора в списке макрокоманд
циклически прокручивается с первой строки на последнюю при нажатии стрелки
вверх, и с последней на первую при нажатии стрелки вниз.

 #Двойной щелчок мыши для редактирования макрокоманды#

    Этот параметр используется для открытия окна ~редактирования макрокоманды~@MacroParams@,
используя двойной щелчок мыши вместо одного.

 #Использовать разделители областей#

    Если эта опция включена, то в списке макрокоманд отображаются разделительные
линии между разными областями макрокоманд.

 #Сохранять все макросы в реестр при запуске модуля#

    Сбросьте этот флаг и вновь созданные макрокоманды не будут записаны в реестр
при запуске модуля и, соответственно, не будут отображаться в списке макрокоманд.

    Заметьте, что эта опция имеет смысл только в том случае, если опция FAR #Автозапись конфигурации#
выключена, в противном случае FAR автоматически сохранит эти макрокоманды.

 #Показывать все, кроме областей "Viewer" и "Editor" в панелях#

    При включении этой опции, в списке макрокоманд, запущенном из файловой
панели, отображаются все макрокоманды, кроме принадлежащих областям "Viewer"
и "Editor".

 #Показывать только область "Viewer" в программе просмотра#

    При включении этой опции, в списке макрокоманд, во встроенной программе
просмотра, отображаются только работающие в ней макрокоманды.

 #Показывать только область "Editor" в редакторе#

    При включении этой опции, в списке макрокоманд, в редакторе,
отображаются только макрокоманды работающие в нём.

@MacroExport
$ #Экспорт макрокоманды в файл#
    Если появляется необходимость сохранить макрокоманду в файле, то, нажав
#F2# в списке макрокоманд и введя в появившемся диалоге имя экспортируемого
файла и нажав кнопку #[Сохранить]#, вы получите файл макрокоманды формата
REGEDIT, с введённым вами именем. По умолчанию в строке ввода имя файла
принимает имя макрокоманды и, если не введён путь, сохраняется
в текущей папке выбранного диска.

    При желании сохранить макрокоманду в несуществующей папке,
модуль создаст её для вас на любую глубину вложенности, при условии,
что длина набранного вами пути с именем не превысит ограничение,
вложенное в операционную систему, например:

 #Dir1\Dir2\Dir3\macroname.reg#

    Модуль также поддерживает работу с UNC путями, т.е. при сохранении
макрокоманды укажите в строке ввода UNC путь, например:

 #\\Server\Resource\Dir1\Dir2\Dir3\macroname.reg#

@MacroExportAll
$ #Экспорт всех макрокоманд в файл#
    Если появляется необходимость сохранить все макрокоманды в файле, то нажав
#Shift-F2# в списке макрокоманд и введя в появившемся диалоге имя
экспортируемого файла и нажав кнопку #[Сохранить]#, вы получите файл
макрокоманд формата REGEDIT, с введённым вами именем. По умолчанию в строке
ввода имя файла содержит значение "KeyMacros.reg" и, если не введён путь,
сохраняется в текущей папке выбранного диска.

    При желании сохранить макрокоманды в несуществующей папке,
модуль создаст её для вас на любую глубину вложенности, при условии,
что длина набранного вами пути с именем не превысит ограничение,
вложенное в операционную систему, например:

 #Dir1\Dir2\Dir3\KeyMacros.reg#

    Модуль также поддерживает работу с UNC путями, т.е. при сохранении
макрокоманды укажите в строке ввода UNC путь, например:

 #\\Server\Resource\Dir1\Dir2\Dir3\KeyMacros.reg#

@MacroExportExist
$ #Файл уже существует#
    При возникновении ситуации, когда файл с введённым Вами именем существует,
Вы получите сообщение о выборе одного из следующего: #Overwrite# - перезаписывает
существующий файл, #Rename# - возвращает Вас в диалоговое окно, чтобы ввести
новое имя экспортируемого файла и #Cancel# - отменяет экспорт файла и возвращает
Вас в список макрокоманд.

@MacroVariables
$ #Переменные#
    Переменные позволяют вам задавать имена значениям и обращаться к ним позже.
В макропоследовательности можно применять локальные и глобальные переменные.
    Имя локальной переменной начинается с символа '%', за которым следуют буквы
латинского алфавита, цифры и символы '_' и '.'
    Имя глобальной переменной начинается с двух символов '%%', за которым следуют
буквы латинского алфавита, цифры, и символы '_' и '.'
    Область действия локальной переменной - текущая макропоследовательность.
    Область действия глобальной переменной - текущий сеанс FAR.
    Имена регистронезависимые: '%myStr' и '%MYstr' - одна и та же переменная.
    Переменные могут быть двух типов - целое число или строка.
    Целочисленные константы: NNN - 10-ричная константа, 0NNN - 8-ричная константа,
0xNNN - 16-ричная константа.
    Присвоение значения переменной должно заканчиваться символом ';'


    Над переменными можно производить следующие операции:
    Операция     Описание
    #+#            Числовое сложение
    #-#            Числовое вычитание
    #*#            Числовое умножение
    #/#            Числовое деление. FAR прерывает исполнение макроса,
                 если происходит деление на 0
    #&#            Логическое умножение
    #^#            Исключающее ИЛИ (XOR)
    #|#            Логическое сложение
    #!#            Логическое отрицание
