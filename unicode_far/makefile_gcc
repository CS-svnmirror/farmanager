OBJDIR = ./GCC/obj
EXEDIR = ./GCC
EXENAME = Far.exe
EXEFULLNAME = $(EXEDIR)/$(EXENAME)
FARINCLUDE = ./Include
DEF = far.def
DEPFILE = far.gcc.dep

SRCS = 	cddrv.cpp \
	CFileMask.cpp \
	chgmmode.cpp \
	chgprior.cpp \
	clipboard.cpp \
	cmdline.cpp \
	cmem.cpp \
	config.cpp \
	constitle.cpp \
	copy.cpp \
	ctrlobj.cpp \
	cvtname.cpp \
	del.cpp \
	delete.cpp \
	dialog.cpp \
	dizlist.cpp \
	dlgedit.cpp \
	edit.cpp \
	editor.cpp \
	eject.cpp \
	execute.cpp \
	farexcpt.cpp \
	farqueue.cpp \
	farrtl.cpp \
	farwinapi.cpp \
	ffolders.cpp \
	fileattr.cpp \
	fileedit.cpp \
	filefilter.cpp \
	filefilterparams.cpp \
	filelist.cpp \
	FileMasksProcessor.cpp \
	FileMasksWithExclude.cpp \
	fileowner.cpp \
	filepanels.cpp \
	filestr.cpp \
	filetype.cpp \
	fileview.cpp \
	findfile.cpp \
	flink.cpp \
	flmodes.cpp \
	flplugin.cpp \
	flshow.cpp \
	flupdate.cpp \
	fnparce.cpp \
	foldtree.cpp \
	frame.cpp \
	gettable.cpp \
	global.cpp \
	grabber.cpp \
	help.cpp \
	hilight.cpp \
	history.cpp \
	hmenu.cpp \
	hotplug.cpp \
	infolist.cpp \
	interf.cpp \
	iswind.cpp \
	keybar.cpp \
	keyboard.cpp \
	language.cpp \
	local.cpp \
	localOEM.cpp \
	lockscrn.cpp \
	macro.cpp \
	main.cpp \
	manager.cpp \
	menubar.cpp \
	message.cpp \
	mix.cpp \
	mkdir.cpp \
	mktemp.c \
	modal.cpp \
	namelist.cpp \
	new.cpp \
	options.cpp \
	palette.cpp \
	panel.cpp \
	plist.cpp \
	plognmn.cpp \
	plugapi.cpp \
	plugins.cpp \
	PluginA.cpp \
	PluginW.cpp \
	poscache.cpp \
	print.cpp \
	qsortex.c \
	qsort.c \
	qview.cpp \
	rdrwdsk.cpp \
	RefreshFrameManager.cpp \
	RegExp.cpp \
	registry.cpp \
	savefpos.cpp \
	savescr.cpp \
	scantree.cpp \
	scrbuf.cpp \
	scrobj.cpp \
	scrsaver.cpp \
	setattr.cpp \
	setcolor.cpp \
	stddlg.cpp \
	strdup.c \
	strftime.cpp \
	strmix.cpp \
	strncat.c \
	strncpy.c \
	syntax.cpp \
	TPreRedrawFunc.cpp \
	tvar.cpp \
	TVMStack.cpp \
	syslog.cpp \
	treelist.cpp \
	udlist.cpp \
	UnicodeString.cpp \
	usermenu.cpp \
	viewer.cpp \
	vmenu.cpp \
	xlat.cpp \
	imports.cpp \
	hook_wow64.c

OBJS = $(patsubst %.cpp,$(OBJDIR)/%.o,$(filter %.cpp,$(SRCS))) $(patsubst %.c,$(OBJDIR)/%.o,$(filter %.c,$(SRCS))) $(OBJDIR)/far.rc.o
MAP = $(patsubst %.exe,%.map,$(EXEFULLNAME))

CXX = g++
CC = gcc
RM = rm -f
CP = cp -f
M4 = m4 -P
MV = mv -f
MKDIR = mkdir -p
WINDRES = windres
DEFINES = -D FAR_ALPHA_VERSION -D UNICODE -D _UNICODE
CCFLAGS = -mno-cygwin -pipe -Os $(DEFINES) -funsigned-char -fomit-frame-pointer -fno-exceptions -fno-rtti -Wall -Wno-missing-braces -Wno-unknown-pragmas -Wno-switch
CFLAGS = -mno-cygwin -pipe -Os $(DEFINES) -funsigned-char -fomit-frame-pointer -fno-exceptions -Wall -Wno-missing-braces -Wno-unknown-pragmas -Wno-switch
LNKFLAGS = -mno-cygwin -s -lmpr -lwinspool

.PHONY: all
all: dirs lng depfile
	@$(MAKE) -f makefile_gcc build

.PHONY: lng
lng: farlang.templ
	@echo generating language files
	@tools/lng.generator.exe -nc -i lang.ini -ol "$(EXEDIR)" farlang.templ

.PHONY: depfile
depfile:
	@tools/gawk -f ./scripts/mkdep.awk -v compiler=gcc mkdep.list > $(DEPFILE)

.PHONY: dirs
dirs:
	@$(MKDIR) $(EXEDIR)
	@$(MKDIR) $(OBJDIR)
	@$(MKDIR) $(OBJDIR)/headers.hpp.gch 
	@$(MKDIR) $(FARINCLUDE)

.PHONY: build
build: $(EXEFULLNAME) $(EXEDIR)/FarEng.hlf $(EXEDIR)/FarRus.hlf $(EXEDIR)/File_id.diz $(FARINCLUDE)/farcolor.hpp $(FARINCLUDE)/farkeys.hpp $(FARINCLUDE)/plugin.hpp $(FARINCLUDE)/plugin.pas $(FARINCLUDE)/farcolor.pas $(FARINCLUDE)/farkeys.pas

$(EXEFULLNAME): Far.exe.manifest far.rc copyright.inc farversion.inc $(OBJDIR)/headers.hpp.gch/c $(OBJDIR)/headers.hpp.gch/c++ $(OBJS) $(DEF)
	@echo linking $@
	@$(CXX) -o $@ $(OBJS) $(LNKFLAGS) -Xlinker -Map -Xlinker $(MAP)

$(OBJDIR)/%.o: %.c
	@echo compiling $<
	@$(CC) $(CFLAGS) -c -include $(OBJDIR)/headers.hpp -o $@ $<

$(OBJDIR)/hook_wow64.o: hook_wow64.c
	@echo compiling $<
	@$(CC) $(CFLAGS) -fno-strict-aliasing -c -include $(OBJDIR)/headers.hpp -o $@ $<

$(OBJDIR)/%.o: %.cpp
	@echo compiling $<
	@$(CXX) $(CCFLAGS) -c -include $(OBJDIR)/headers.hpp -o $@ $<

$(OBJDIR)/headers.hpp.gch/c: headers.hpp 
	@echo making precompiled headers for C
	@$(CC) -x c-header -c $(CFLAGS) -o $@ $<

$(OBJDIR)/headers.hpp.gch/c++: headers.hpp 
	@echo making precompiled headers for C++
	@$(CXX) -x c++-header -c $(CCFLAGS) -o $@ $<

$(OBJDIR)/far.rc.o: far.rc far.ico
	@echo compiling resource file
	@$(WINDRES) -i $< -o $@

Far.exe.manifest: Far.exe.manifest.m4 farversion.m4 tools.m4 vbuild.m4
	@echo generating $@
	@tools/m4 -P Far.exe.manifest.m4 > $@

far.rc: far.rc.m4 farversion.m4 tools.m4 vbuild.m4 res.hpp Far.exe.manifest
	@echo generating $@
	@tools/m4 -P far.rc.m4 > $@

copyright.inc: copyright.inc.m4 farversion.m4 tools.m4 vbuild.m4
	@echo generating $@
	@tools/m4 -P copyright.inc.m4 | tools/gawk -f ./scripts/enc.awk > $@

farversion.inc: farversion.inc.m4 farversion.m4 tools.m4 vbuild.m4
	@echo generating $@
	@tools/m4 -P farversion.inc.m4 > $@

farlang.templ: farlang.templ.m4 farversion.m4 tools.m4 vbuild.m4
	@echo generating $@
	@tools/m4 -P farlang.templ.m4 > $@

$(EXEDIR)/FarEng.hlf: FarEng.hlf.m4 farversion.m4 tools.m4 vbuild.m4
	@echo generating $@
	@tools/gawk -f ./scripts/mkhlf.awk FarEng.hlf.m4 | tools/m4 -P > $@

$(EXEDIR)/FarRus.hlf: FarRus.hlf.m4 farversion.m4 tools.m4 vbuild.m4
	@echo generating $@
	@tools/gawk -f ./scripts/mkhlf.awk FarRus.hlf.m4 | tools/m4 -P > $@

$(EXEDIR)/File_id.diz: File_id.diz.m4 farversion.m4 tools.m4 vbuild.m4
	@echo generating $@
	@tools/m4 -P File_id.diz.m4 > $@

$(FARINCLUDE)/farcolor.hpp: colors.hpp farversion.m4 tools.m4 vbuild.m4
	@echo generating $@
	@tools/m4 -P -DINPUT=colors.hpp headers.m4 > $@

$(FARINCLUDE)/farkeys.hpp: keys.hpp farversion.m4 tools.m4 vbuild.m4
	@echo generating $@
	@tools/m4 -P -DINPUT=keys.hpp headers.m4 > $@

$(FARINCLUDE)/plugin.hpp: plugin.hpp farversion.m4 tools.m4 vbuild.m4
	@echo generating $@
	@tools/m4 -P -DINPUT=plugin.hpp headers.m4 > $@

$(FARINCLUDE)/plugin.pas: plugin.pas farversion.m4 tools.m4 vbuild.m4
	@echo generating $@
	@tools/m4 -P -DINPUT=plugin.pas headers.m4 > $@

$(FARINCLUDE)/farcolor.pas: farcolor.pas farversion.m4 tools.m4 vbuild.m4
	@echo generating $@
	@tools/m4 -P -DINPUT=farcolor.pas headers.m4 > $@

$(FARINCLUDE)/farkeys.pas: farkeys.pas farversion.m4 tools.m4 vbuild.m4
	@echo generating $@
	@tools/m4 -P -DINPUT=farkeys.pas headers.m4 > $@

ifeq ($(MAKECMDGOALS),build)
include $(DEPFILE)
endif

.PHONY: clean
clean:
	@echo cleaning
	@$(RM) $(OBJS)
	@$(RM) $(DEPFILE)
	@$(RM) $(OBJDIR)/headers.hpp.gch/c $(OBJDIR)/headers.hpp.gch/c++
	@$(RM) $(EXEFULLNAME) $(MAP)
	@$(RM) Far.exe.manifest far.rc copyright.inc farversion.inc
	@$(RM) $(EXEDIR)/FarEng.lng
	@$(RM) $(EXEDIR)/FarRus.lng
	@$(RM) farlang.templ lang.hpp lang.ini
	@$(RM) $(EXEDIR)/FarEng.hlf
	@$(RM) $(EXEDIR)/FarRus.hlf
	@$(RM) $(EXEDIR)/File_id.diz
